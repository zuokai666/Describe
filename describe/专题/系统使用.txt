1.验证必要属性，满足及时失败原则
解决：
建立META-INF/spring.factories添加
# Application Listeners
org.springframework.context.ApplicationListener=\
org.*.*.ValidatePropertiesApplicationListener
由于在refresh()中的prepareRefresh()会校验必要属性，所以需要再次之前设置需要检查的属性
发现在SpringApplication.run()中观察者在contextLoaded()会通知观察者们，所以监听这个事件，设置必要属性

2.提高访问三方接口效率，调用6个
解决：
使用基于AQS的CountDownLatch对调用三方接口使用倒计时，使用多线程方式访问，提高效率，前提是各个三方接口结果无依赖


3.使用装饰器模式包装Resource，重写getFilename()以实现自己的需求


4.批量导出数据生成文件，内存泄漏，原因Hibernate一级缓存问题


5.使用DCL双重检查锁方法检查借据问题（主动还款，批量扣款）
避免死锁，不满足循环等待条件，顺序等待


6.batch框架插入job，job_execution，step_exection主键冲突问题
单体应用锁，与分布式锁没有满足，只有在获取nextKey时，加入了synchronized，可以满足本身应用的线程安全，如果同时有2个服务器连接同一个数据库，则会出现主键冲突。



