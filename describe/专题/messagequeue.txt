为什么使用消息队列？
使用消息队列有什么缺点?
消息队列如何选型?
如何保证消息队列是高可用的？
如何保证消息不被重复消费?
如何保证消费的可靠性传输?
如何保证消息的顺序性？


1.解耦，削峰，异步
2.引入的缺点是分布式的一些通用问题，区域间通信可能失败，引入更复杂的机制来确保消息的可靠性
3.ActiveMQ，RabbitMQ，RocketMQ
	选型方向：社区更新频率（github提交频率）语言：rabbit是erlang，其它都是java，而且rabbitmq才用的是amqp协议，更加通用，和spring也有集成。
4.搭建mq集群，提高可用性
5.原因：消息处理完毕，但由于没有给消息队列发送确认消费信息，导致消息再一次发送到其他消费者。解决方案：接口幂等处理
6.分为3种，生产者丢失数据，消息队列丢失数据，消费者丢失数据
        事务 + confirm，confirm居多
        持久化消息
        自动确认消息改为手动确认消息